# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    images_directory: '%kernel.project_dir%/public/uploads/images'
    images_category_directory: '%kernel.project_dir%/public/uploads/images/card'
    session_max_idle_time: 600
    maintenance:
        statut: false
        ipAuthorized: ["::1","192.168.1.101"]
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Services\PaginationService:
        arguments:
            $templatePath: 'admin/partials/pagination.html.twig'

    App\Services\FileUploader:
        arguments:
            $targetDirectory: '%images_directory%'
            $imageCategoryDirectory: '%images_category_directory%'
    App\Services\MailerService:

    App\Security\SessionIdleListener:
        bind:
            $maxIdleTime: '%session_max_idle_time%'
            $session: '@session'
        tags:
            - { name: kernel.event_listener, event: kernel.request }
    App\EventListener\MaintenanceListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }
        arguments: ['%maintenance%']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
